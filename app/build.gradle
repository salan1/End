apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.end"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.example.end.EndAndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable = true
            jniDebuggable = true
            renderscriptDebuggable = true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debugRelease {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable = true
            jniDebuggable = true
        }
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

kapt {
    generateStubs = true
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.android.support:support-dynamic-animation:28.0.0'

    // Android Architecture Components
    implementation "androidx.lifecycle:lifecycle-runtime:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"

    // Navigation Arch Component
    implementation "androidx.navigation:navigation-fragment:2.0.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.0.0"
    implementation "androidx.navigation:navigation-ui:2.0.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.0.0"

    // Dependencies for local unit tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5Version"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'
    testImplementation 'net.andreinc.mockneat:mockneat:0.3.6'
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    // Dependencies for Android Instrumented tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    androidTestImplementation "org.mockito:mockito-android:2.28.2"
    androidTestImplementation 'com.github.tmurakami:dexopener:2.0.2'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'net.andreinc.mockneat:mockneat:0.3.6'


    // Mockito
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.mockito:mockito-inline:2.28.2'
    testImplementation 'org.mockito:mockito-android:2.28.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.28.2'

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    // Retrofit with RxJava support
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    // Room with RxJava
    implementation 'androidx.room:room-runtime:2.1.0'
    implementation 'androidx.room:room-rxjava2:2.1.0'
    kapt 'androidx.room:room-compiler:2.1.0'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    compileOnly "org.glassfish:javax.annotation:10.0-b28"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    //Enable dagger compiler also in androidTest folder
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    // Dagger mock
    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
    testImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'

    // Image caching and performance library
    implementation('com.github.bumptech.glide:glide:4.9.0') {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // Joda time library
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'
    implementation('org.aaronhe:threetenbp-gson-adapter:1.0.2') {
        exclude module: 'threetenbp'
    }

    // Logging library
    implementation 'com.jakewharton.timber:timber:4.7.1'

}
